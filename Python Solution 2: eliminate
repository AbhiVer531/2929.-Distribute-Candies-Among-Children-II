class Solution:
    def distributeCandies(self, n: int, limit: int) -> int:
        def count_unbounded(total, parts):
            if total < 0:
                return 0
            return comb(total + parts - 1, parts - 1)
        total = count_unbounded(n, 3)
        for i in range(3):
            total -= count_unbounded(n - (limit + 1), 3)
        for i in range(3):
            for j in range(i + 1, 3):
                total += count_unbounded(n - 2 * (limit + 1), 3)
        total -= count_unbounded(n - 3 * (limit + 1), 3)
        return total
